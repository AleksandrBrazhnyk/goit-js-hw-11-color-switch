{"version":3,"sources":["webpack:///./index.js"],"names":["colors","startBtn","document","querySelector","stopBtn","body","style","addEventListener","timer","start","stop","intervalId","isActive","this","Date","now","setInterval","showColor","clearInterval","items","index","min","max","length","Math","floor","random","color","find","item","indexOf","backgroundColor"],"mappings":"kHAAA,iBAEA,MAAMA,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,WAGIC,EAAWC,SAASC,cAAc,yBAClCC,EAAUF,SAASC,cAAc,wBACjCE,EAAOH,SAASG,KAAKC,MAE3BL,EAASM,iBAAiB,QAAS,KAAQC,EAAMC,UACjDL,EAAQG,iBAAiB,QAAS,KAAQC,EAAME,SAGhD,MAAMF,EAAQ,CACVG,WAAY,KACZC,UAAU,EAEVH,QACI,GAAGI,KAAKD,SACJ,OAGcE,KAAKC,MACvBF,KAAKD,UAAW,EAEhBC,KAAKF,WAAaK,YAAY,KAC1BC,EAAUjB,IACX,MAGPU,OACIQ,cAAcL,KAAKF,YACnBE,KAAKD,UAAW,IAUlBK,EAAYE,IACd,MAAMC,GANyBC,EAMS,EANJC,EAMOH,EAAMI,OAAS,EALnDC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IADtB,IAACA,EAAKC,EAOpC,MAAMK,EAAQR,EAAMS,KAAKC,GAAQV,EAAMW,QAAQD,KAAUT,GACzDf,EAAK0B,gBAAkBJ,K","file":"main.bafc8ec9d55db1145d65.js","sourcesContent":["import './styles.css';\n\nconst colors = [\n  '#FFFFFF',\n  '#2196F3',\n  '#4CAF50',\n  '#FF9800',\n  '#009688',\n  '#795548',\n];\n\nconst startBtn = document.querySelector('[data-action=\"start\"]');\nconst stopBtn = document.querySelector('[data-action=\"stop\"]');\nconst body = document.body.style;\n\nstartBtn.addEventListener('click', () => { timer.start(); });\nstopBtn.addEventListener('click', () => { timer.stop(); });\n\n// timer\nconst timer = {\n    intervalId: null,\n    isActive: false,\n\n    start() { // запускаем счетчик\n        if(this.isActive) {\n            return;\n        }\n\n        const startTime = Date.now(); // запоминаем текущую дату\n        this.isActive = true;\n\n        this.intervalId = setInterval(() => { // что делать при нажатии на старт\n            showColor(colors); // вызываем функцию\n        }, 1000); \n    },\n\n    stop() {\n        clearInterval(this.intervalId);\n        this.isActive = false;\n    },\n};\n\n// рандомное число\nconst randomIntegerFromInterval = (min, max) => { \n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\n// находим цвет\nconst showColor = items => { \n    const index = randomIntegerFromInterval(0, items.length - 1);\n    const color = items.find(item => items.indexOf(item) === index);\n    body.backgroundColor = color;\n}"],"sourceRoot":""}